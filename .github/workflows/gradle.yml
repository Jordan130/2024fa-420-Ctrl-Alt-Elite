
name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Jacoco Report to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.1
      with:
        path: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 40
        min-coverage-changed-files: 60
        debug-mode: false
        
    - name: JaCoCo Code Coverage Report
      id: jacoco_reporter
      uses: PavanMudigonda/jacoco-reporter@v4.9
      with:
        coverage_results_path: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
        coverage_report_name: Coverage
        coverage_report_title: JaCoCo
        github_token: ${{ secrets.GITHUB_TOKEN }}
        skip_check_run: true # set to false to publish check run
        minimum_coverage: 80
        fail_below_threshold: false # set to false to pass below even when threshold is not met
        publish_only_summary: false. #set to true to publish only summary to avoid 65k problem

      # Publish Coverage Job Summary  # Optional
    - name: Add Coverage Job Summary
      run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
       
    - name: Get the Coverage info
      run: |
        echo "Total coverage coverage-overall ${{ steps.jacoco.outputs.coverage-overall }}"
        echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"
        echo "Coverage coverage_percentage ${{ steps.jacoco.outputs.coverage_percentage }}"
        
#     - name: construct coverage job summary markdown
#       run: |
#         cat > coverage_summary.md <<EOF
#           | Code Coverage Summary                      | Value                                                    |
#           |--------------------------------------------|----------------------------------------------------------|
#           | Code Coverage %                            | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |
#           | :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }}       |
#           | :x: Number of Lines Missed                 | ${{ steps.jacoco_reporter.outputs.missed_lines }}        |
#           | Total Number of Lines                      | ${{ steps.jacoco_reporter.outputs.total_lines }}         |
#         EOF
#         cat coverage_summary.md >> $GITHUB_STEP_SUMMARY

    - name: print output
      run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
